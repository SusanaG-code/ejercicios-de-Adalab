{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/susanagonzalezvejo/Desktop/Adalab/ejercicios-de-Adalab/modulo-03/lesson-3.6/exercice-01/src/Input.js\";\nimport React from \"react\";\nimport \"./Input.css\";\nimport Paragraph from \"./Paragraph\"; // Vamos a partir de una web sencilla con un input de tipo texto y un párrafo vacío. ¿Seremos capaces de hacer que con React y el estado, cuando modificamos el input aparezca el texto en el párrafo?\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(ev) {\n    const input = ev.target.value;\n\n    if (input === \"cebolla\") {\n      alert(\"hola\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleClick,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        content: \"Parrafin que deber\\xEDa de cambiar\",\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInput.propTypes = {};\nexport default Input;","map":{"version":3,"sources":["/Users/susanagonzalezvejo/Desktop/Adalab/ejercicios-de-Adalab/modulo-03/lesson-3.6/exercice-01/src/Input.js"],"names":["React","Paragraph","Input","Component","constructor","props","handleClick","bind","ev","input","target","value","alert","render","state","text","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDD,EAAAA,WAAW,CAACE,EAAD,EAAK;AACd,UAAMC,KAAK,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAAxB;;AAEA,QAAIF,KAAK,KAAK,SAAd,EAAyB;AACvBG,MAAAA,KAAK,CAAC,MAAD,CAAL;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKP,WAAlC;AAA+C,QAAA,SAAS,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,oCAAnB;AAAA,kBACG,KAAKQ,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAtBiC;;AAyBpCb,KAAK,CAACc,SAAN,GAAkB,EAAlB;AACA,eAAed,KAAf","sourcesContent":["import React from \"react\";\nimport \"./Input.css\";\nimport Paragraph from \"./Paragraph\";\n\n// Vamos a partir de una web sencilla con un input de tipo texto y un párrafo vacío. ¿Seremos capaces de hacer que con React y el estado, cuando modificamos el input aparezca el texto en el párrafo?\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(ev) {\n    const input = ev.target.value;\n\n    if (input === \"cebolla\") {\n      alert(\"hola\");\n    }\n  }\n\n  render() {\n    return (\n      <section>\n        <input type=\"text\" onChange={this.handleClick} className=\"input\" />\n        <Paragraph content=\"Parrafin que debería de cambiar\">\n          {this.state.text}\n        </Paragraph>\n      </section>\n    );\n  }\n}\n\nInput.propTypes = {};\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}